//AutoGenerated
namespace BridgeConsole
{
    internal class MethodAdapters
    {
        public MethodAdapters() { }

		Library2Expose.InstanceExport Library2Expose_InstanceExport = new();
		public string Library2Expose_InstanceExport_PublicMethod1(string[] args)
		{
			bool r = false;
			return Library2Expose_InstanceExport.PublicMethod1().ToString();
		}

		public string Library2Expose_InstanceExport_PublicMethod2(string[] args)
		{
			bool r = false;
			System.Int32 arg0;
			r = System.Int32.TryParse(args[0], out arg0);
			if(! r) return String.Format("ERR: argument 0 ({0}) couldn't be parsed as {1}", args[0], "System.Int32");
			return Library2Expose_InstanceExport.PublicMethod2(arg0).ToString();
		}

		public string Library2Expose_InstanceExport_PublicMethod3(string[] args)
		{
			bool r = false;
			System.Int32 arg0;
			r = System.Int32.TryParse(args[0], out arg0);
			if(! r) return String.Format("ERR: argument 0 ({0}) couldn't be parsed as {1}", args[0], "System.Int32");
			System.String arg1 = args[1];
			System.Boolean arg2;
			r = System.Boolean.TryParse(args[2], out arg2);
			if(! r) return String.Format("ERR: argument 2 ({0}) couldn't be parsed as {1}", args[2], "System.Boolean");
			return Library2Expose_InstanceExport.PublicMethod3(arg0, arg1, arg2).ToString();
		}

		public string Library2Expose_InstanceExport_PublicMethod4(string[] args)
		{
			bool r = false;
			Library2Expose_InstanceExport.PublicMethod4();
			return "OK";
		}

		public string Library2Expose_InstanceExport_StaticPublicMethod1(string[] args)
		{
			bool r = false;
			return Library2Expose.InstanceExport.StaticPublicMethod1().ToString();
		}

		public string Library2Expose_InstanceExport_StaticPublicMethod2(string[] args)
		{
			bool r = false;
			System.Int32 arg0;
			r = System.Int32.TryParse(args[0], out arg0);
			if(! r) return String.Format("ERR: argument 0 ({0}) couldn't be parsed as {1}", args[0], "System.Int32");
			return Library2Expose.InstanceExport.StaticPublicMethod2(arg0).ToString();
		}

		public string Library2Expose_InstanceExport_StaticPublicMethod3(string[] args)
		{
			bool r = false;
			System.Int32 arg0;
			r = System.Int32.TryParse(args[0], out arg0);
			if(! r) return String.Format("ERR: argument 0 ({0}) couldn't be parsed as {1}", args[0], "System.Int32");
			System.String arg1 = args[1];
			System.Boolean arg2;
			r = System.Boolean.TryParse(args[2], out arg2);
			if(! r) return String.Format("ERR: argument 2 ({0}) couldn't be parsed as {1}", args[2], "System.Boolean");
			return Library2Expose.InstanceExport.StaticPublicMethod3(arg0, arg1, arg2).ToString();
		}

		public string Library2Expose_StaticExport_PublicMethod1(string[] args)
		{
			bool r = false;
			return Library2Expose.StaticExport.PublicMethod1().ToString();
		}

		public string Library2Expose_StaticExport_PublicMethod2(string[] args)
		{
			bool r = false;
			System.Int32 arg0;
			r = System.Int32.TryParse(args[0], out arg0);
			if(! r) return String.Format("ERR: argument 0 ({0}) couldn't be parsed as {1}", args[0], "System.Int32");
			return Library2Expose.StaticExport.PublicMethod2(arg0).ToString();
		}

		public string Library2Expose_StaticExport_PublicMethod3(string[] args)
		{
			bool r = false;
			System.Int32 arg0;
			r = System.Int32.TryParse(args[0], out arg0);
			if(! r) return String.Format("ERR: argument 0 ({0}) couldn't be parsed as {1}", args[0], "System.Int32");
			System.String arg1 = args[1];
			System.Boolean arg2;
			r = System.Boolean.TryParse(args[2], out arg2);
			if(! r) return String.Format("ERR: argument 2 ({0}) couldn't be parsed as {1}", args[2], "System.Boolean");
			return Library2Expose.StaticExport.PublicMethod3(arg0, arg1, arg2).ToString();
		}


    }
}
